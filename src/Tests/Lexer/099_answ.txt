0	7	KEYWORD	program	PROGRAM
0	24	IDENT	ya_tochno_sdoxny	ya_tochno_sdoxny
0	25	SEPARATOR	;	SEMI
1	3	KEYWORD	var	VAR
2	7	IDENT	str	str
2	8	SEPARATOR	,	COMMA
2	10	IDENT	s	s
2	11	OPERATOR	:	COLON
2	18	KEYWORD	string	STRING
2	19	SEPARATOR	;	SEMI
3	7	IDENT	arr	arr
3	8	OPERATOR	:	COLON
3	14	KEYWORD	array	ARRAY
3	15	SEPARATOR	[	F_BRACKET
3	16	INT	1	1
3	18	OPERATOR	..	MASS
3	21	INT	255	255
3	22	SEPARATOR	]	S_BRACKET
3	25	KEYWORD	of	OF
3	32	KEYWORD	string	STRING
3	33	SEPARATOR	;	SEMI
4	5	IDENT	n	n
4	6	SEPARATOR	,	COMMA
4	7	IDENT	i	i
4	8	SEPARATOR	,	COMMA
4	9	IDENT	l	l
4	10	OPERATOR	:	COLON
4	15	IDENT	byte	byte
4	16	SEPARATOR	;	SEMI
5	5	KEYWORD	begin	BEGIN
6	10	IDENT	readln	readln
6	11	SEPARATOR	(	F_PARENT
6	14	IDENT	str	str
6	15	SEPARATOR	)	S_PARENT
6	16	SEPARATOR	;	SEMI
7	5	IDENT	l	l
7	8	OPERATOR	:=	ASSIGN
7	15	IDENT	length	length
7	16	SEPARATOR	(	F_PARENT
7	19	IDENT	str	str
7	20	SEPARATOR	)	S_PARENT
7	21	SEPARATOR	;	SEMI
8	5	IDENT	n	n
8	8	OPERATOR	:=	ASSIGN
8	10	INT	0	0
8	11	SEPARATOR	;	SEMI
9	5	IDENT	s	s
9	8	OPERATOR	:=	ASSIGN
9	11	STRING	''	
9	12	SEPARATOR	;	SEMI
10	7	KEYWORD	for	FOR
10	9	IDENT	i	i
10	11	OPERATOR	:=	ASSIGN
10	12	INT	1	1
10	15	KEYWORD	to	TO
10	17	IDENT	l	l
10	20	KEYWORD	do	DO
11	10	KEYWORD	if	IF
11	12	SEPARATOR	(	F_PARENT
11	13	SEPARATOR	(	F_PARENT
11	16	IDENT	str	str
11	17	SEPARATOR	[	F_BRACKET
11	18	IDENT	i	i
11	19	SEPARATOR	]	S_BRACKET
11	21	OPERATOR	=	EQUAL
11	25	STRING	' '	 
11	26	SEPARATOR	)	S_PARENT
11	29	KEYWORD	or	OR
11	31	SEPARATOR	(	F_PARENT
11	32	IDENT	i	i
11	34	OPERATOR	=	EQUAL
11	36	IDENT	l	l
11	37	SEPARATOR	)	S_PARENT
11	38	SEPARATOR	)	S_PARENT
11	42	KEYWORD	and	AND
11	44	SEPARATOR	(	F_PARENT
11	45	IDENT	s	s
11	48	OPERATOR	<>	null
11	51	STRING	''	
11	52	SEPARATOR	)	S_PARENT
11	57	KEYWORD	then	THEN
11	63	KEYWORD	begin	BEGIN
12	13	IDENT	n	n
12	16	OPERATOR	:=	ASSIGN
12	18	IDENT	n	n
12	20	OPERATOR	+	null
12	22	INT	1	1
12	23	SEPARATOR	;	SEMI
13	14	KEYWORD	if	IF
13	16	SEPARATOR	(	F_PARENT
13	17	IDENT	i	i
13	19	OPERATOR	=	EQUAL
13	21	IDENT	l	l
13	22	SEPARATOR	)	S_PARENT
13	26	KEYWORD	and	AND
13	28	SEPARATOR	(	F_PARENT
13	31	IDENT	str	str
13	32	SEPARATOR	[	F_BRACKET
13	33	IDENT	i	i
13	34	SEPARATOR	]	S_BRACKET
13	37	OPERATOR	<>	null
13	41	STRING	' '	 
13	42	SEPARATOR	)	S_PARENT
13	47	KEYWORD	then	THEN
13	49	IDENT	s	s
13	52	OPERATOR	:=	ASSIGN
13	54	IDENT	s	s
13	56	OPERATOR	+	null
13	60	IDENT	str	str
13	61	SEPARATOR	[	F_BRACKET
13	62	IDENT	i	i
13	63	SEPARATOR	]	S_BRACKET
13	64	SEPARATOR	;	SEMI
14	15	IDENT	arr	arr
14	16	SEPARATOR	[	F_BRACKET
14	17	IDENT	n	n
14	18	SEPARATOR	]	S_BRACKET
14	21	OPERATOR	:=	ASSIGN
14	23	IDENT	s	s
14	24	SEPARATOR	;	SEMI
15	13	IDENT	s	s
15	16	OPERATOR	:=	ASSIGN
15	19	STRING	''	
15	20	SEPARATOR	;	SEMI
16	11	KEYWORD	end	END
17	12	KEYWORD	else	ELSE
18	14	KEYWORD	if	IF
18	18	IDENT	str	str
18	19	SEPARATOR	[	F_BRACKET
18	20	IDENT	i	i
18	21	SEPARATOR	]	S_BRACKET
18	24	OPERATOR	<>	null
18	28	STRING	' '	 
18	33	KEYWORD	then	THEN
19	17	IDENT	s	s
19	20	OPERATOR	:=	ASSIGN
19	22	IDENT	s	s
19	24	OPERATOR	+	null
19	28	IDENT	str	str
19	29	SEPARATOR	[	F_BRACKET
19	30	IDENT	i	i
19	31	SEPARATOR	]	S_BRACKET
19	32	SEPARATOR	;	SEMI
20	11	IDENT	writeln	writeln
20	12	SEPARATOR	(	F_PARENT
20	13	IDENT	n	n
20	14	SEPARATOR	)	S_PARENT
20	15	SEPARATOR	;	SEMI
21	7	KEYWORD	for	FOR
21	9	IDENT	i	i
21	11	OPERATOR	:=	ASSIGN
21	12	INT	1	1
21	15	KEYWORD	to	TO
21	17	IDENT	n	n
21	20	KEYWORD	do	DO
22	15	IDENT	writeln	writeln
22	16	SEPARATOR	(	F_PARENT
22	19	IDENT	arr	arr
22	20	SEPARATOR	[	F_BRACKET
22	21	IDENT	i	i
22	22	SEPARATOR	]	S_BRACKET
22	23	SEPARATOR	,	COMMA
22	28	STRING	' - '	 - 
22	29	SEPARATOR	,	COMMA
22	36	IDENT	length	length
22	37	SEPARATOR	(	F_PARENT
22	40	IDENT	arr	arr
22	41	SEPARATOR	[	F_BRACKET
22	42	IDENT	i	i
22	43	SEPARATOR	]	S_BRACKET
22	44	SEPARATOR	)	S_PARENT
22	45	SEPARATOR	)	S_PARENT
22	46	SEPARATOR	;	SEMI
23	3	KEYWORD	end	END
23	4	SEPARATOR	.	POINT