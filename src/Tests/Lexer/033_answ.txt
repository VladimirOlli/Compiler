0	7	KEYWORD	program	PROGRAM
0	10	IDENT	jj	jj
0	11	SEPARATOR	;	SEMI
1	5	KEYWORD	const	CONST
1	7	IDENT	n	n
1	9	OPERATOR	=	EQUAL
1	12	INT	20	20
1	13	SEPARATOR	;	SEMI
2	3	KEYWORD	var	VAR
3	7	IDENT	arr	arr
3	8	OPERATOR	:	COLON
3	14	KEYWORD	array	ARRAY
3	15	SEPARATOR	[	F_BRACKET
3	16	INT	1	1
3	18	OPERATOR	..	MASS
3	19	IDENT	n	n
3	20	SEPARATOR	]	S_BRACKET
3	23	KEYWORD	of	OF
3	31	KEYWORD	integer	INTEGER
3	32	SEPARATOR	;	SEMI
4	5	IDENT	i	i
4	6	OPERATOR	:	COLON
4	11	IDENT	byte	byte
4	12	SEPARATOR	;	SEMI
5	5	KEYWORD	begin	BEGIN
6	13	IDENT	randomize	randomize
6	14	SEPARATOR	;	SEMI
7	7	KEYWORD	for	FOR
7	9	IDENT	i	i
7	11	OPERATOR	:=	ASSIGN
7	12	INT	1	1
7	15	KEYWORD	to	TO
7	17	IDENT	n	n
7	20	KEYWORD	do	DO
7	26	KEYWORD	begin	BEGIN
8	11	IDENT	arr	arr
8	12	SEPARATOR	[	F_BRACKET
8	13	IDENT	i	i
8	14	SEPARATOR	]	S_BRACKET
8	17	OPERATOR	:=	ASSIGN
8	24	IDENT	random	random
8	25	SEPARATOR	(	F_PARENT
8	28	INT	100	100
8	29	SEPARATOR	)	S_PARENT
8	31	OPERATOR	-	null
8	34	INT	75	75
8	35	SEPARATOR	;	SEMI
9	13	IDENT	write	write
9	14	SEPARATOR	(	F_PARENT
9	17	IDENT	arr	arr
9	18	SEPARATOR	[	F_BRACKET
9	19	IDENT	i	i
9	20	SEPARATOR	]	S_BRACKET
9	21	SEPARATOR	)	S_PARENT
9	22	SEPARATOR	;	SEMI
10	7	KEYWORD	end	END
10	8	SEPARATOR	;	SEMI
11	11	IDENT	writeln	writeln
11	12	SEPARATOR	;	SEMI
12	7	KEYWORD	for	FOR
12	9	IDENT	i	i
12	11	OPERATOR	:=	ASSIGN
12	12	INT	1	1
12	15	KEYWORD	to	TO
12	17	IDENT	n	n
12	20	KEYWORD	do	DO
13	10	KEYWORD	if	IF
13	14	IDENT	arr	arr
13	15	SEPARATOR	[	F_BRACKET
13	16	IDENT	i	i
13	17	SEPARATOR	]	S_BRACKET
13	19	OPERATOR	>	MORE
13	21	INT	0	0
13	26	KEYWORD	then	THEN
13	32	KEYWORD	begin	BEGIN
14	19	IDENT	writeln	writeln
14	20	SEPARATOR	(	F_PARENT
14	21	IDENT	i	i
14	22	SEPARATOR	,	COMMA
14	26	STRING	' '	 
14	27	SEPARATOR	,	COMMA
14	31	IDENT	arr	arr
14	32	SEPARATOR	[	F_BRACKET
14	33	IDENT	i	i
14	34	SEPARATOR	]	S_BRACKET
14	35	SEPARATOR	)	S_PARENT
14	36	SEPARATOR	;	SEMI
15	17	KEYWORD	break	BREAK
15	18	SEPARATOR	;	SEMI
16	11	KEYWORD	end	END
16	12	SEPARATOR	;	SEMI
17	3	KEYWORD	end	END
17	4	SEPARATOR	.	POINT