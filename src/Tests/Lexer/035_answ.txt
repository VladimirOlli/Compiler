0	7	KEYWORD	program	PROGRAM
0	11	IDENT	jju	jju
0	12	SEPARATOR	;	SEMI
1	3	KEYWORD	var	VAR
2	8	IDENT	str1	str1
2	9	SEPARATOR	,	COMMA
2	13	IDENT	str2	str2
2	14	SEPARATOR	,	COMMA
2	18	IDENT	str3	str3
2	19	OPERATOR	:	COLON
2	26	KEYWORD	string	STRING
2	27	SEPARATOR	;	SEMI
3	5	IDENT	l	l
3	6	SEPARATOR	,	COMMA
3	7	IDENT	i	i
3	8	OPERATOR	:	COLON
3	13	IDENT	byte	byte
3	14	SEPARATOR	;	SEMI
4	5	KEYWORD	begin	BEGIN
5	10	IDENT	readln	readln
5	11	SEPARATOR	(	F_PARENT
5	15	IDENT	str1	str1
5	16	SEPARATOR	)	S_PARENT
5	17	SEPARATOR	;	SEMI
6	8	IDENT	str2	str2
6	11	OPERATOR	:=	ASSIGN
6	14	STRING	''	
6	15	SEPARATOR	;	SEMI
7	8	IDENT	str3	str3
7	11	OPERATOR	:=	ASSIGN
7	14	STRING	''	
7	15	SEPARATOR	;	SEMI
8	5	IDENT	l	l
8	8	OPERATOR	:=	ASSIGN
8	15	IDENT	length	length
8	16	SEPARATOR	(	F_PARENT
8	20	IDENT	str1	str1
8	21	SEPARATOR	)	S_PARENT
8	22	SEPARATOR	;	SEMI
9	7	KEYWORD	for	FOR
9	9	IDENT	i	i
9	11	OPERATOR	:=	ASSIGN
9	12	INT	1	1
9	15	KEYWORD	to	TO
9	17	IDENT	l	l
9	20	KEYWORD	do	DO
10	10	KEYWORD	if	IF
10	14	IDENT	odd	odd
10	15	SEPARATOR	(	F_PARENT
10	16	IDENT	i	i
10	17	SEPARATOR	)	S_PARENT
10	22	KEYWORD	then	THEN
11	16	IDENT	str3	str3
11	19	OPERATOR	:=	ASSIGN
11	24	IDENT	str3	str3
11	26	OPERATOR	+	null
11	31	IDENT	str1	str1
11	32	SEPARATOR	[	F_BRACKET
11	33	IDENT	i	i
11	34	SEPARATOR	]	S_BRACKET
12	12	KEYWORD	else	ELSE
13	16	IDENT	str2	str2
13	19	OPERATOR	:=	ASSIGN
13	24	IDENT	str2	str2
13	26	OPERATOR	+	null
13	31	IDENT	str1	str1
13	32	SEPARATOR	[	F_BRACKET
13	33	IDENT	i	i
13	34	SEPARATOR	]	S_BRACKET
13	35	SEPARATOR	;	SEMI
14	11	IDENT	writeln	writeln
14	12	SEPARATOR	(	F_PARENT
14	16	IDENT	str2	str2
14	17	SEPARATOR	)	S_PARENT
14	18	SEPARATOR	;	SEMI
15	11	IDENT	writeln	writeln
15	12	SEPARATOR	(	F_PARENT
15	16	IDENT	str3	str3
15	17	SEPARATOR	)	S_PARENT
15	18	SEPARATOR	;	SEMI
16	3	KEYWORD	end	END
16	4	SEPARATOR	.	POINT