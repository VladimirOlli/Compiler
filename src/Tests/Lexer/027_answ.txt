0	7	KEYWORD	program	PROGRAM
0	11	IDENT	f44	f44
0	12	SEPARATOR	;	SEMI
1	5	KEYWORD	const	CONST
1	7	IDENT	n	n
1	9	OPERATOR	=	EQUAL
1	11	INT	3	3
1	12	SEPARATOR	;	SEMI
2	3	KEYWORD	var	VAR
2	7	IDENT	a	a
2	8	OPERATOR	:	COLON
2	13	KEYWORD	array	ARRAY
2	14	SEPARATOR	[	F_BRACKET
2	15	INT	1	1
2	17	OPERATOR	..	MASS
2	18	IDENT	n	n
2	19	SEPARATOR	]	S_BRACKET
2	22	KEYWORD	of	OF
2	30	KEYWORD	integer	INTEGER
2	31	SEPARATOR	;	SEMI
3	11	IDENT	index	index
3	13	OPERATOR	:	COLON
3	21	KEYWORD	integer	INTEGER
3	22	SEPARATOR	;	SEMI
5	9	KEYWORD	procedure	PROCEDURE
5	18	IDENT	generate	generate
5	20	SEPARATOR	(	F_PARENT
5	21	IDENT	l	l
5	22	SEPARATOR	,	COMMA
5	23	IDENT	r	r
5	24	OPERATOR	:	COLON
5	31	KEYWORD	integer	INTEGER
5	32	SEPARATOR	)	S_PARENT
5	33	SEPARATOR	;	SEMI
6	3	KEYWORD	var	VAR
6	5	IDENT	i	i
6	6	SEPARATOR	,	COMMA
6	7	IDENT	v	v
6	8	OPERATOR	:	COLON
6	15	KEYWORD	integer	INTEGER
6	16	SEPARATOR	;	SEMI
7	5	KEYWORD	begin	BEGIN
8	8	KEYWORD	if	IF
8	10	SEPARATOR	(	F_PARENT
8	11	IDENT	l	l
8	12	OPERATOR	=	EQUAL
8	13	IDENT	r	r
8	14	SEPARATOR	)	S_PARENT
8	19	KEYWORD	then	THEN
8	25	KEYWORD	begin	BEGIN
9	11	KEYWORD	for	FOR
9	13	IDENT	i	i
9	15	OPERATOR	:=	ASSIGN
9	16	INT	1	1
9	19	KEYWORD	to	TO
9	21	IDENT	n	n
9	24	KEYWORD	do	DO
9	30	IDENT	write	write
9	31	SEPARATOR	(	F_PARENT
9	32	IDENT	a	a
9	33	SEPARATOR	[	F_BRACKET
9	34	IDENT	i	i
9	35	SEPARATOR	]	S_BRACKET
9	36	SEPARATOR	,	COMMA
9	39	STRING	' '	 
9	40	SEPARATOR	)	S_PARENT
9	41	SEPARATOR	;	SEMI
10	15	IDENT	writeln	writeln
10	16	SEPARATOR	;	SEMI
11	9	KEYWORD	end	END
11	14	KEYWORD	else	ELSE
11	20	KEYWORD	begin	BEGIN
12	11	KEYWORD	for	FOR
12	13	IDENT	i	i
12	16	OPERATOR	:=	ASSIGN
12	18	IDENT	l	l
12	21	KEYWORD	to	TO
12	23	IDENT	r	r
12	26	KEYWORD	do	DO
12	32	KEYWORD	begin	BEGIN
13	12	IDENT	v	v
13	14	OPERATOR	:=	ASSIGN
13	15	IDENT	a	a
13	16	SEPARATOR	[	F_BRACKET
13	17	IDENT	l	l
13	18	SEPARATOR	]	S_BRACKET
13	19	SEPARATOR	;	SEMI
13	21	IDENT	a	a
13	22	SEPARATOR	[	F_BRACKET
13	23	IDENT	l	l
13	24	SEPARATOR	]	S_BRACKET
13	26	OPERATOR	:=	ASSIGN
13	27	IDENT	a	a
13	28	SEPARATOR	[	F_BRACKET
13	29	IDENT	i	i
13	30	SEPARATOR	]	S_BRACKET
13	31	SEPARATOR	;	SEMI
13	33	IDENT	a	a
13	34	SEPARATOR	[	F_BRACKET
13	35	IDENT	i	i
13	36	SEPARATOR	]	S_BRACKET
13	38	OPERATOR	:=	ASSIGN
13	39	IDENT	v	v
13	40	SEPARATOR	;	SEMI
14	19	IDENT	generate	generate
14	20	SEPARATOR	(	F_PARENT
14	21	IDENT	l	l
14	22	OPERATOR	+	null
14	23	INT	1	1
14	24	SEPARATOR	,	COMMA
14	25	IDENT	r	r
14	26	SEPARATOR	)	S_PARENT
14	27	SEPARATOR	;	SEMI
15	12	IDENT	v	v
15	14	OPERATOR	:=	ASSIGN
15	15	IDENT	a	a
15	16	SEPARATOR	[	F_BRACKET
15	17	IDENT	l	l
15	18	SEPARATOR	]	S_BRACKET
15	19	SEPARATOR	;	SEMI
15	21	IDENT	a	a
15	22	SEPARATOR	[	F_BRACKET
15	23	IDENT	l	l
15	24	SEPARATOR	]	S_BRACKET
15	26	OPERATOR	:=	ASSIGN
15	27	IDENT	a	a
15	28	SEPARATOR	[	F_BRACKET
15	29	IDENT	i	i
15	30	SEPARATOR	]	S_BRACKET
15	31	SEPARATOR	;	SEMI
15	33	IDENT	a	a
15	34	SEPARATOR	[	F_BRACKET
15	35	IDENT	i	i
15	36	SEPARATOR	]	S_BRACKET
15	38	OPERATOR	:=	ASSIGN
15	39	IDENT	v	v
15	40	SEPARATOR	;	SEMI
16	11	KEYWORD	end	END
16	12	SEPARATOR	;	SEMI
17	9	KEYWORD	end	END
17	10	SEPARATOR	;	SEMI
18	3	KEYWORD	end	END
18	4	SEPARATOR	;	SEMI
20	5	KEYWORD	begin	BEGIN
21	9	KEYWORD	for	FOR
21	15	IDENT	index	index
21	18	OPERATOR	:=	ASSIGN
21	20	INT	1	1
21	23	KEYWORD	to	TO
21	25	IDENT	n	n
21	28	KEYWORD	do	DO
21	30	IDENT	a	a
21	31	SEPARATOR	[	F_BRACKET
21	36	IDENT	index	index
21	37	SEPARATOR	]	S_BRACKET
21	39	OPERATOR	:=	ASSIGN
21	44	IDENT	index	index
21	45	SEPARATOR	;	SEMI
22	14	IDENT	generate	generate
22	15	SEPARATOR	(	F_PARENT
22	17	INT	1	1
22	18	SEPARATOR	,	COMMA
22	19	IDENT	n	n
22	21	SEPARATOR	)	S_PARENT
22	22	SEPARATOR	;	SEMI
23	3	KEYWORD	end	END
23	4	SEPARATOR	.	POINT